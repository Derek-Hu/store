{
  "template": "@icedesign/react-ts-material-template",
  "type": "react",
  "fusion-site": {
    "id": 1,
    "name": "Fusion Design",
    "url": "https://fusion.alibaba-inc.com/api/v1/sites/1/materials"
  },
  "name": "materials",
  "description": "基于 Fusion 基础组件和 ice 脚手架的官方物料",
  "author": "",
  "blocks": [
    {
      "name": "AdvancedDetailHead",
      "title": "AdvancedDetailHead",
      "category": "Information",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-advanced-detail/screenshot.png",
      "description": "intro block",
      "homepage": "https://unpkg.com/@alifd/fusion-advanced-detail@0.1.8/build/index.html",
      "categories": [
        "Information"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/AdvancedDetail",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-advanced-detail",
        "version": "0.1.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-advanced-detail/screenshot.png"
      ],
      "publishTime": "2019-11-28T11:30:32.213Z",
      "updateTime": "2020-03-04T14:52:39.270Z",
      "__ID__": "fbf7ba9e",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/0-zh-fbf7ba9e.png",
          "description": "谢莉莉 13676349585 | Xielili@aliwork-inc.com 主操作 操作一 更多 现在所在地 中国/浙江 工作经验 3 高等教育 Singapore University of Technology and Design 职级 P10 职位 Senior Director 部门 aliwork&EHR 选项卡一 选项卡二 选项卡三 申请 谢莉莉Xielili@aliwork-inc.com 审批 张三 接受 合同发送 合同接受 入职准备 完成 基础信息 姓氏 谢 名字 莉莉 国家/地区 中国/浙江 电话号码 13676349585 邮箱 Xielili@aliwork-inc.com 现居地址 杭州 工作经历 分类标题 工作单位 浙江杭州天猫有限公司 职位 高级研发专家 国家/地区 中国/浙江 项目描述 分类标题 月薪 20,000 USD 月数 13 津贴 5.000 USD5,000 USD 标题 - 标题 - Options/RSU No 操作日志一 操作日志二 操作日志三 操作进程 操作人 执行结果 操作时间 主管审批 梅长苏 同意 2019-11-11 09:36 HRG 叶周全 同意 2019-11-11 09:36 C&B审核人 吴永辉 同意 2019-11-11 09:36 业务线审批 倩倩 同意 2019-11-11 09:36 HR线审批 叶俊 同意 2019-11-11 09:36"
        }
      ]
    },
    {
      "name": "BasicDetail",
      "title": "BasicDetail",
      "category": "Information",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-basic-detail/screenshot.png",
      "description": "intro block",
      "homepage": "https://unpkg.com/@alifd/fusion-basic-detail@0.1.6/build/index.html",
      "categories": [
        "Information"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/BasicDetail",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-basic-detail",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-basic-detail/screenshot.png"
      ],
      "publishTime": "2019-11-28T11:38:31.720Z",
      "updateTime": "2020-03-04T14:53:17.812Z",
      "__ID__": "491701bf",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/1-zh-491701bf.png",
          "description": "基础信息 公司简称 蚂蚁证券投资有限公司 项目代号 ALXM890392-94890 投资委员会 经济体投资委员会 所属行业 新零售 关联项目 杭州阿里巴巴集团新零售 项目成员信息 IC成语 阮小五，阮小二，阮小七，公孙胜，曹正，李立，樊瑞，阮小五，阮小二，阮小七，公孙胜，曹正，李立，樊瑞 法务评审 阮小五，阮小二，阮小七，公孙胜，曹正，李立，樊瑞，阮小五，阮小二，阮小七，公孙胜，曹正，李立，樊瑞 财务评审 阮小五，阮小二，阮小七，公孙胜，曹正，李立，樊瑞，阮小五，阮小二，阮小七，公孙胜，曹正，李立，樊瑞 目标公司 目标公司 主营业务 注册地 创始人 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 蚂蚁证券投资有限公司 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏"
        }
      ]
    },
    {
      "name": "BasicForm",
      "title": "BasicForm",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-basic-form/screenshot.png",
      "description": "single column form",
      "homepage": "https://unpkg.com/@alifd/fusion-basic-form@0.1.8/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/BasicForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-basic-form",
        "version": "0.1.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-basic-form/screenshot.png"
      ],
      "publishTime": "2019-11-28T05:42:17.312Z",
      "updateTime": "2020-03-04T14:53:54.960Z",
      "__ID__": "6a3b175b",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/2-zh-6a3b175b.png",
          "description": "项目名称： 项目所属分类： 可访问日期： - 项目权限： 私密项目 内部项目 开放目 上传封面： 上传图片 项目描述： 提交 取消"
        }
      ]
    },
    {
      "name": "BasicList",
      "title": "BasicList",
      "category": "Information",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-basic-list/screenshot.png",
      "description": "intro block",
      "homepage": "https://unpkg.com/@alifd/fusion-basic-list@0.1.11/build/index.html",
      "categories": [
        "Information"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/BasicList",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-basic-list",
        "version": "0.1.11",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-basic-list/screenshot.png"
      ],
      "publishTime": "2019-12-06T11:30:08.711Z",
      "updateTime": "2020-03-04T14:54:32.496Z",
      "__ID__": "67df4b39",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/3-zh-67df4b39.png",
          "description": "搜索 内容分类 类目一类目二类目三类目四类目五类目六类目七类目八类目九类目十 时间 不到一年一年以上三年以下三年以上五年以下五年以上 添加内容 构建一套产品化设计系统 随着互联网行业的聚变式发展，在电商业务从“信息透出” 到 “在线交易” 的过程中，网站 UI 构建也经历了“体验一致性”、“设计效率”、“UI系统构建/应用效率”、“多端适配” … 谢瑶 3 小时前更新 编辑订阅删除 构建一套产品化设计系统 随着互联网行业的聚变式发展，在电商业务从“信息透出” 到 “在线交易” 的过程中，网站 UI 构建也经历了“体验一致性”、“设计效率”、“UI系统构建/应用效率”、“多端适配” … 谢瑶 3 小时前更新 编辑订阅删除 构建一套产品化设计系统 随着互联网行业的聚变式发展，在电商业务从“信息透出” 到 “在线交易” 的过程中，网站 UI 构建也经历了“体验一致性”、“设计效率”、“UI系统构建/应用效率”、“多端适配” … 谢瑶 3 小时前更新 编辑订阅删除 构建一套产品化设计系统 随着互联网行业的聚变式发展，在电商业务从“信息透出” 到 “在线交易” 的过程中，网站 UI 构建也经历了“体验一致性”、“设计效率”、“UI系统构建/应用效率”、“多端适配” … 谢瑶 3 小时前更新 编辑订阅删除 构建一套产品化设计系统 随着互联网行业的聚变式发展，在电商业务从“信息透出” 到 “在线交易” 的过程中，网站 UI 构建也经历了“体验一致性”、“设计效率”、“UI系统构建/应用效率”、“多端适配” … 谢瑶 3 小时前更新 编辑订阅删除 共200条需求 上一页123410下一页1/10到第页确定"
        }
      ]
    },
    {
      "name": "CardList",
      "title": "CardList",
      "category": "Information",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-card-list/screenshot.png",
      "description": "intro block",
      "homepage": "https://unpkg.com/@alifd/fusion-card-list@0.1.10/build/index.html",
      "categories": [
        "Information"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/CardList",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-card-list",
        "version": "0.1.10",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-card-list/screenshot.png"
      ],
      "publishTime": "2019-12-12T14:38:18.391Z",
      "updateTime": "2020-03-04T14:55:09.916Z",
      "__ID__": "3feb05bd",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/4-zh-3feb05bd.png",
          "description": "搜索 内容分类 类目一类目二类目三类目四类目五类目六类目七类目八类目九类目十 时间 不到一年一年以上三年以下三年以上五年以下五年以上 添加内容 图片型卡片标题 图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述 链接一链接二 图片型卡片标题 图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述 链接一链接二 图片型卡片标题 图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述 链接一链接二 图片型卡片标题 图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述 链接一链接二 图片型卡片标题 图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述 链接一链接二 图片型卡片标题 图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述 链接一链接二 图片型卡片标题 图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述 链接一链接二"
        }
      ]
    },
    {
      "name": "ClassifiedForm",
      "title": "ClassifiedForm",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-classified-form/screenshot.png",
      "description": "Classified form",
      "homepage": "https://unpkg.com/@alifd/fusion-classified-form@0.1.7/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/ClassifiedForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-classified-form",
        "version": "0.1.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-classified-form/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:52:29.487Z",
      "updateTime": "2020-03-04T14:55:45.542Z",
      "__ID__": "fcce4bab",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/5-zh-fcce4bab.png",
          "description": "工作经历 分类信息 工作地址 职位 公司名称 币种 年薪 期望年薪 分类信息 月薪 月数 津贴 年度目标奖金 去年实际奖金 选项/RSU 是 否 选项/RSU 描述 0/500 提交 取消"
        }
      ]
    },
    {
      "name": "DialogForm",
      "title": "弹出式表单",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-dialog-form/screenshot.png",
      "description": "弹出式表单",
      "homepage": "https://unpkg.com/@alifd/fusion-dialog-form@0.1.6/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/DialogForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-dialog-form",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-dialog-form/screenshot.png"
      ],
      "publishTime": "2019-11-30T05:36:39.218Z",
      "updateTime": "2020-03-04T15:14:26.362Z",
      "__ID__": "581937d9",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/6-zh-581937d9.png",
          "description": "新增目标公司 公司简称 项目代号 项目类型 关联项目 确认取消"
        }
      ]
    },
    {
      "name": "FailDetail",
      "title": "FailDetail",
      "category": "Exception",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-fail-detail/screenshot.png",
      "description": "fail Detail",
      "homepage": "https://unpkg.com/@alifd/fusion-fail-detail@0.1.7/build/index.html",
      "categories": [
        "Exception"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FailDetail",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-fail-detail",
        "version": "0.1.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-fail-detail/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:17:42.523Z",
      "updateTime": "2020-03-04T14:56:52.638Z",
      "__ID__": "5baf8153",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/7-zh-5baf8153.png",
          "description": "提交失败 请核对并修改信息后，再重新提交。 返回修改"
        }
      ]
    },
    {
      "name": "FlowForm",
      "title": "流程表单",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-flow-form/screenshot.png",
      "description": "流程表单",
      "homepage": "https://unpkg.com/@alifd/fusion-flow-form@0.1.9/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FlowForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-flow-form",
        "version": "0.1.9",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-flow-form/screenshot.png"
      ],
      "publishTime": "2019-11-29T09:37:56.382Z",
      "updateTime": "2020-03-04T14:57:48.319Z",
      "__ID__": "556bab0c",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/8-zh-556bab0c.png",
          "description": "申请 审批 李强 接受 合同发送 合同接受 入职准备 完成 审批信息 审批人 李强 加签人 评估方式 已电面 未电面 意见&反馈 0/500 候选人信息 谢莉莉 13676349585 | Xielili@aliwork-inc.com 现在所在地 杭州 工作经验 3 教育经历 Singapore University of Technology and Design 职级 P10 职位 Senior Director 部门 aliwork&EHR 工作地 杭州 薪水 20,000 +23.2% 基础信息 姓氏 谢 名字 莉莉 国家/地区 中国/浙江 电话号码 13676349585 邮箱 Xielili@aliwork-inc.com 现居地址 杭州 工作经历 公司信息 工作单位 浙江杭州天猫有限公司 职位 高级研发专家 国家/地区 中国/浙江 职责描述 Fusion 是一套企业级中后台设计系统解决方案，致力于解决产品体验一致性问题、设计研发协同问题，以及UI开发效率问题。 待遇信息 月薪 20,000 USD 月数 13 国家/地区 中国/浙江 Options/RSU No 同意 拒绝 转移 加签"
        }
      ]
    },
    {
      "name": "Forbidden",
      "title": "Forbidden",
      "category": "Exception",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-forbidden/screenshot.png",
      "description": "forbidden  exception",
      "homepage": "https://unpkg.com/@alifd/fusion-forbidden@0.1.6/build/index.html",
      "categories": [
        "Exception"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/Forbidden",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-forbidden",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-forbidden/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:18:22.170Z",
      "updateTime": "2020-03-04T14:58:20.203Z",
      "__ID__": "1c4be74",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/9-zh-1c4be74.png",
          "description": "403 服务器好像挂了你要等会了"
        }
      ]
    },
    {
      "name": "FourColumnForm",
      "title": "FourColumnForm",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-four-column-form/screenshot.png",
      "description": "Form of four columns",
      "homepage": "https://unpkg.com/@alifd/fusion-four-column-form@0.1.9/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FourColumnForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-four-column-form",
        "version": "0.1.9",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-four-column-form/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:53:23.861Z",
      "updateTime": "2020-03-04T14:59:02.321Z",
      "__ID__": "866a2bac",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/10-zh-866a2bac.png",
          "description": "项目名称： 项目所属分类： 申请人： 项目权限： 私密项目 内部项目 开放目 状态： 联系人： 关联项目： 申请日期： - 项目编号1： 项目编号2： 项目编号3： 项目编号4： 项目编号5： 项目编号6： 项目编号7： 项目编号8： 提交 取消"
        }
      ]
    },
    {
      "name": "FusionCardAreaChart",
      "title": "fusion-card-area-chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-card-area-chart/screenshot.png",
      "description": "面积图卡片",
      "homepage": "https://unpkg.com/@alifd/fusion-card-area-chart@0.1.11/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FusionCardAreaChart",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-card-area-chart",
        "version": "0.1.11",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-card-area-chart/screenshot.png"
      ],
      "publishTime": "2019-12-06T02:26:08.658Z",
      "updateTime": "2020-03-04T14:59:47.337Z",
      "__ID__": "3bce9b7b",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/11-zh-3bce9b7b.png",
          "description": "访问量 123,456 周同比:12.0↑"
        }
      ]
    },
    {
      "name": "FusionCardBarChart",
      "title": "funsion-card-bar-Chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-card-bar-chart/screenshot.png",
      "description": "柱形图卡片",
      "homepage": "https://unpkg.com/@alifd/fusion-card-bar-chart@0.1.8/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FusionCardBarChart",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-card-bar-chart",
        "version": "0.1.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@types/react": "^16.9.13",
        "@types/react-dom": "^16.9.4",
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-card-bar-chart/screenshot.png"
      ],
      "publishTime": "2019-12-02T09:03:40.609Z",
      "updateTime": "2020-03-04T15:00:41.384Z",
      "__ID__": "a4205430",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/12-zh-a4205430.png",
          "description": "总销售额 123,456 周同比:10.1↑"
        }
      ]
    },
    {
      "name": "FusionCardCrossPieChart",
      "title": "fusion-card-cross-pie-chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-cross-pie-chart/screenshot.png",
      "description": "横向饼图",
      "homepage": "https://unpkg.com/@alifd/fusion-cross-pie-chart@0.1.7/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FusionCardCrossPieChart",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-cross-pie-chart",
        "version": "0.1.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-cross-pie-chart/screenshot.png"
      ],
      "publishTime": "2019-12-04T03:30:41.387Z",
      "updateTime": "2020-03-04T15:27:58.593Z",
      "__ID__": "aba77db1",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/13-zh-aba77db1.png",
          "description": "用户浏览器占比"
        }
      ]
    },
    {
      "name": "FusionCardGroupBarChart",
      "title": "fusion-card-group-bar-chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-card-group-bar-chart/screenshot.png",
      "description": "分组柱形图卡片",
      "homepage": "https://unpkg.com/@alifd/fusion-card-group-bar-chart@0.1.9/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FusionCardGroupBarChart",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-card-group-bar-chart",
        "version": "0.1.9",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-card-group-bar-chart/screenshot.png"
      ],
      "publishTime": "2019-12-06T02:32:53.883Z",
      "updateTime": "2020-03-04T15:20:02.876Z",
      "__ID__": "83a0e307",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/14-zh-83a0e307.png",
          "description": "消费数据"
        }
      ]
    },
    {
      "name": "FusionCardLineChart",
      "title": "fusion-card-area-chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-card-line-chart/screenshot.png",
      "description": "折线图卡片",
      "homepage": "https://unpkg.com/@alifd/fusion-card-line-chart@0.1.8/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FusionCardLineChart",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-card-line-chart",
        "version": "0.1.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-card-line-chart/screenshot.png"
      ],
      "publishTime": "2019-12-06T02:33:32.582Z",
      "updateTime": "2020-03-04T15:01:44.702Z",
      "__ID__": "2c9980ee",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/15-zh-2c9980ee.png",
          "description": "门店活动效果 123,456 周同比:10.1↑"
        }
      ]
    },
    {
      "name": "FusionCardPieChart",
      "title": "fusion-card-pie-chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-card-pie-chart/screenshot.png",
      "description": "扇形图卡片",
      "homepage": "https://unpkg.com/@alifd/fusion-card-pie-chart@0.1.7/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FusionCardPieChart",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-card-pie-chart",
        "version": "0.1.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-card-pie-chart/screenshot.png"
      ],
      "publishTime": "2019-12-06T02:34:10.593Z",
      "updateTime": "2020-03-04T15:02:32.724Z",
      "__ID__": "d55afd09",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/16-zh-d55afd09.png",
          "description": "销售额类别占比 类目一 类目二 类目三 销售额 ¥ 183112"
        }
      ]
    },
    {
      "name": "FusionCardRankChart",
      "title": "funsion-card-rank-chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-card-rank-chart/screenshot.png",
      "description": "排行卡片",
      "homepage": "https://unpkg.com/@alifd/fusion-card-rank-chart@0.1.8/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FusionCardRankChart",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-card-rank-chart",
        "version": "0.1.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-card-rank-chart/screenshot.png"
      ],
      "publishTime": "2019-12-04T05:25:05.261Z",
      "updateTime": "2020-03-04T15:03:15.091Z",
      "__ID__": "9ec9a90d",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/17-zh-9ec9a90d.png",
          "description": "区域销售 亚洲 40% 欧洲 30% 南非 20% 美洲 10% 亚洲 商品类目1 6,123 商品类目2 132,4 周同比 45%↑"
        }
      ]
    },
    {
      "name": "FusionCardTypebarChart",
      "title": "fusion-card-typebar-chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-card-typebar-chart/screenshot.png",
      "description": "类型区分的柱形卡片",
      "homepage": "https://unpkg.com/@alifd/fusion-card-typebar-chart@0.1.8/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FusionCardTypebarChart",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-card-typebar-chart",
        "version": "0.1.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-card-typebar-chart/screenshot.png"
      ],
      "publishTime": "2019-12-06T02:35:02.238Z",
      "updateTime": "2020-03-04T15:40:27.223Z",
      "__ID__": "9adb2e87",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/18-zh-9adb2e87.png",
          "description": "门店量 82,234 周同比:10.1↑"
        }
      ]
    },
    {
      "name": "FusionCardWorldmapChart",
      "title": "funsion-card-worldmap-chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-worldmap-chart/screenshot.png",
      "description": "世界地图卡片",
      "homepage": "https://unpkg.com/@alifd/fusion-worldmap-chart@0.1.7/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/FusionCardWorldmapChart",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-worldmap-chart",
        "version": "0.1.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-worldmap-chart/screenshot.png"
      ],
      "publishTime": "2019-12-06T02:35:55.410Z",
      "updateTime": "2020-03-04T15:16:09.864Z",
      "__ID__": "ace45a95",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/19-zh-ace45a95.png",
          "description": "实时监控情况 今日PV：490,760,415今日PV：490,760,415 地域 PV UV 杭州 246,200,123 143,367,212 斯里兰卡 46,200,123 53,367,212 旧金山 8,200,123 9,367,212"
        }
      ]
    },
    {
      "name": "GroupForm",
      "title": "分布表单",
      "category": "Form",
      "views": [
        {
          "title": "分布表单",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-group-form/screenshot.png",
      "description": "分组表单",
      "homepage": "https://unpkg.com/@alifd/fusion-group-form@0.1.11/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/GroupForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-group-form",
        "version": "0.1.11",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-group-form/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:19:13.765Z",
      "updateTime": "2020-03-04T15:04:44.060Z",
      "__ID__": "89e5021f",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/20-zh-89e5021f.png",
          "description": "项目成员信息 公司简称 项目代号 投资委员会 项目类型 关联项目 基础信息 合同类型 IC成员 法务评审会 财务评审 项目评审 基础信息 新增 目标公司 主营业务 注册地 创始人 操作 蚂蚁证券投资有限公司 A 金融证券代理 1569 Cronin Ways Apt. 082 欧鹏 编辑删除更多 蚂蚁证券投资有限公司 B 金融证券代理 4016 Kautzer Route Suite 366 阮小五 编辑删除更多 蚂蚁证券投资有限公司 C 金融证券代理 22 Haag Manor 阮小二 编辑删除更多 蚂蚁证券投资有限公司 D 金融证券代理 1014 McLaughlin Unions 阮小七 编辑删除更多 蚂蚁证券投资有限公司 E 金融证券代理 8748 Devante Center 公孙胜 编辑删除更多 蚂蚁证券投资有限公司 F 金融证券代理 1014 McLaughlin Unions 曹正 编辑删除更多 蚂蚁证券投资有限公司 G 金融证券代理 8748 Devante Center 李立 编辑删除更多 蚂蚁证券投资有限公司 H 金融证券代理 1569 Cronin Ways Apt. 082 樊瑞 编辑删除更多 提交 取消"
        }
      ]
    },
    {
      "name": "HierarchicalForm",
      "title": "分级表单",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-hierarchical-form/screenshot.png",
      "description": "分级表单",
      "homepage": "https://unpkg.com/@alifd/fusion-hierarchical-form@0.1.7/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/HierarchicalForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-hierarchical-form",
        "version": "0.1.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-hierarchical-form/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:19:58.676Z",
      "updateTime": "2020-03-04T15:05:25.092Z",
      "__ID__": "a6357433",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/21-zh-a6357433.png",
          "description": "项目名称 项目所属分类 项目权限 私密项目 内部项目 开放项目 权限范围 权限成员 私密ID , 项目通行码 项目描述 提交 退回"
        }
      ]
    },
    {
      "name": "LoginBlock",
      "title": "block for login",
      "category": "Form",
      "views": [
        {
          "title": "LoginBlock",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-login/screenshot.png",
      "description": "block for login",
      "homepage": "https://unpkg.com/@alifd/fusion-login@0.1.10/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/LoginBlock",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-login",
        "version": "0.1.10",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-login/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:20:31.660Z",
      "updateTime": "2020-03-04T15:05:56.449Z",
      "__ID__": "e4033859",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/22-zh-e4033859.png",
          "description": "账户密码登录手机号登录 自动登录 忘记密码 登录 其他登录方式 注册账号"
        }
      ]
    },
    {
      "name": "FusionCardPieChart",
      "title": "fusion-card-pie-chart",
      "category": "Chart",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-minitor-block/screenshot.png",
      "description": "监控页面",
      "homepage": "https://unpkg.com/@alifd/fusion-minitor-block@0.1.8/build/index.html",
      "categories": [
        "Chart"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/MonitorBlock",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-minitor-block",
        "version": "0.1.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-minitor-block/screenshot.png"
      ],
      "publishTime": "2020-02-17T13:10:59.848Z",
      "updateTime": "2020-03-04T15:33:50.907Z",
      "__ID__": "a69c2f74",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/23-zh-a69c2f74.png",
          "description": "2556 js错误率 周同比:10.1↑ 总PV 234,465789 周同比:1238.1% ↑ 总UV 234,465789 周同比:1238.1%↓ 3456 API成功率 周同比:10.1↑ 3456ms 首次渲染时间 周同比:10.1↑ 3456 资源错误 周同比:10.1↓ JS 错误 成功率调用成功次数错误次数 用户浏览器占比 渲染时间 首次渲染时间 123,456 周同比: 10.1%↑"
        }
      ]
    },
    {
      "name": "NotFound",
      "title": "NotFound",
      "category": "Exception",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-not-found/screenshot.png",
      "description": "not found",
      "homepage": "https://unpkg.com/@alifd/fusion-not-found@0.1.6/build/index.html",
      "categories": [
        "Exception"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/NotFound",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-not-found",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-not-found/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:21:10.413Z",
      "updateTime": "2020-03-04T15:06:53.748Z",
      "__ID__": "821ae29",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/24-zh-821ae29.png",
          "description": "404 服务器好像挂了你要等会了"
        }
      ]
    },
    {
      "name": "PageHeader",
      "title": "页头",
      "category": "Information",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-page-header/screenshot.png",
      "description": "页头位于页容器中，页容器顶部，起到了内容概览和引导页级操作的作用。",
      "homepage": "https://unpkg.com/@alifd/fusion-page-header@0.1.7/build/index.html",
      "categories": [
        "Information"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/PageHeader",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-page-header",
        "version": "0.1.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-page-header/screenshot.png"
      ],
      "publishTime": "2019-11-28T05:56:09.266Z",
      "updateTime": "2020-03-04T15:07:28.963Z",
      "__ID__": "36d0c6d3",
      "__SNAPSHOTS__": []
    },
    {
      "name": "LoginBlock",
      "title": "login",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-register/screenshot.png",
      "description": "A basic register module",
      "homepage": "https://unpkg.com/@alifd/fusion-register@0.1.11/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/RegisterBlock",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-register",
        "version": "0.1.11",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-register/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:22:56.403Z",
      "updateTime": "2020-03-04T15:08:05.283Z",
      "__ID__": "2a3c9585",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/26-zh-2a3c9585.png",
          "description": "注册账号 +86 获取验证码 注册账号 使用已有账号登录"
        }
      ]
    },
    {
      "name": "ServerError",
      "title": "ServerError",
      "category": "Exception",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-server-error/screenshot.png",
      "description": "server error",
      "homepage": "https://unpkg.com/@alifd/fusion-server-error@0.1.6/build/index.html",
      "categories": [
        "Exception"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/ServerError",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-server-error",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-server-error/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:23:35.255Z",
      "updateTime": "2020-03-04T15:08:47.617Z",
      "__ID__": "5ca2f150",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/27-zh-5ca2f150.png",
          "description": "500 服务器好像挂了你要等会了"
        }
      ]
    },
    {
      "name": "SettingPersonBlock",
      "title": "个人设置",
      "category": "Information",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-settings-person/screenshot.png",
      "description": "基础的个人设置Block",
      "homepage": "https://unpkg.com/@alifd/fusion-settings-person@1.0.7/build/index.html",
      "categories": [
        "Information"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/SettingPersonBlock",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-settings-person",
        "version": "1.0.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-settings-person/screenshot.png"
      ],
      "publishTime": "2019-12-06T02:36:36.598Z",
      "updateTime": "2020-03-04T15:09:21.820Z",
      "__ID__": "bcb11675",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/28-zh-bcb11675.png",
          "description": "更新头像 * 头像尽量上传超过 80px*80px, 但不要太大了。 * 请上传两倍图保证清晰度 昵称 手机： 发送验证码 验证码 更新信息"
        }
      ]
    },
    {
      "name": "SettingSystemBlock",
      "title": "系统设置",
      "category": "Information",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-settings-system/screenshot.png",
      "description": "基础的系统设置Block",
      "homepage": "https://unpkg.com/@alifd/fusion-settings-system@1.0.8/build/index.html",
      "categories": [
        "Information"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/SettingSystemBlock",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-settings-system",
        "version": "1.0.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-settings-system/screenshot.png"
      ],
      "publishTime": "2019-12-06T02:37:11.572Z",
      "updateTime": "2020-03-04T15:09:58.626Z",
      "__ID__": "ec60d337",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/29-zh-ec60d337.png",
          "description": "基础设置 权限设置 更多设置 项目封面 更新头像 * 头像尽量上传超过 80px*80px, 但不要太大了。 * 请上传两倍图保证清晰度 项目名称 项目所属分类 项目权限 私密项目 内部项目 开放项目 项目描述 保存"
        }
      ]
    },
    {
      "name": "StepForm",
      "title": "StepForm",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-step-form/screenshot.png",
      "description": "Form of steps",
      "homepage": "https://unpkg.com/@alifd/fusion-step-form@0.1.7/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/StepForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-step-form",
        "version": "0.1.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-step-form/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:54:13.095Z",
      "updateTime": "2020-03-04T15:10:35.005Z",
      "__ID__": "4f10be9a",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/30-zh-4f10be9a.png",
          "description": "1 填写信息 2 确认信息 3 完成 项目名称 项目所属分类 项目权限 私密项目 内部项目 开放目 项目描述 下一步"
        }
      ]
    },
    {
      "name": "SuccessDetail",
      "title": "SuccessDetail",
      "category": "Exception",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-success-detail/screenshot.png",
      "description": "success Detail",
      "homepage": "https://unpkg.com/@alifd/fusion-success-detail@0.1.7/build/index.html",
      "categories": [
        "Exception"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/SuccessDetail",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-success-detail",
        "version": "0.1.7",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-success-detail/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:24:11.814Z",
      "updateTime": "2020-03-04T15:11:02.853Z",
      "__ID__": "6ee69317",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/31-zh-6ee69317.png",
          "description": "提交成功 0s 后自动跳转至工单页 返回列表继续创建 返回列表函数响应"
        }
      ]
    },
    {
      "name": "BasicList",
      "title": "BasicList",
      "category": "Information",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-table-list/screenshot.png",
      "description": "intro block",
      "homepage": "https://unpkg.com/@alifd/fusion-table-list@0.1.6/build/index.html",
      "categories": [
        "Information"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/TableList",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-table-list",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-table-list/screenshot.png"
      ],
      "publishTime": "2019-12-12T14:40:43.549Z",
      "updateTime": "2020-03-04T15:11:45.829Z",
      "__ID__": "1ad3a2a1",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/32-zh-1ad3a2a1.png",
          "description": "需求名称/编号 需求方 标签 查询 重置 展开 新增下载更多操作 需求名称 类型数量 需求方 接口人 供应商接口人 设计师 操作 品牌营销服务设计 A Banner 广告A 曾庆超 阮小二 博彦-李强 李立 编辑订阅删除 品牌营销服务设计 B 24小时页面 阮小五 谢莉莉 博彦-李强 曹正 编辑订阅删除 品牌营销服务设计 C 24小时页面 公孙胜 樊瑞 博彦-李强 姚越洋 编辑订阅删除 品牌营销服务设计 D 24小时页面 曾庆超 阮小二 博彦-李强 李立 编辑订阅删除 品牌营销服务设计 E Banner 广告A 阮小五 谢莉莉 博彦-李强 曹正 编辑订阅删除 品牌营销服务设计 F 24小时页面 公孙胜 樊瑞 博彦-李强 姚越洋 编辑订阅删除 品牌营销服务设计 G Banner 广告A 曾庆超 阮小二 博彦-李强 李立 编辑订阅删除 品牌营销服务设计 H Banner 广告A 阮小五 谢莉莉 博彦-李强 曹正 编辑订阅删除 品牌营销服务设计 I Banner 广告A 公孙胜 樊瑞 博彦-李强 姚越洋 编辑订阅删除 品牌营销服务设计 J Banner 广告A 曾庆超 阮小二 博彦-李强 李立 编辑订阅删除 品牌营销服务设计 K Banner 广告A 阮小五 谢莉莉 博彦-李强 曹正 编辑订阅删除 共200条需求 上一页123410下一页1/10到第页确定"
        }
      ]
    },
    {
      "name": "ThreeColumnForm",
      "title": "ThreeColumnForm",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-three-column-form/screenshot.png",
      "description": "Form of three columns",
      "homepage": "https://unpkg.com/@alifd/fusion-three-column-form@0.1.6/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/ThreeColumnForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-three-column-form",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-three-column-form/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:55:58.141Z",
      "updateTime": "2020-03-04T15:12:22.642Z",
      "__ID__": "cb9f2e0c",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/33-zh-cb9f2e0c.png",
          "description": "项目名称： 项目所属分类： 申请日期： - 申请人： 状态： 项目权限： 私密项目 内部项目 开放目 项目描述： 上传文件 请选择大小不超过5M的文件，支持doc，docx，xls，xlsx，zip格式 提交 取消"
        }
      ]
    },
    {
      "name": "TwoColumnForm",
      "title": "TwoColumnForm",
      "category": "Form",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-two-column-form/screenshot.png",
      "description": "Form with two coumns",
      "homepage": "https://unpkg.com/@alifd/fusion-two-column-form@0.1.8/build/index.html",
      "categories": [
        "Form"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/TwoColumnForm",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-two-column-form",
        "version": "0.1.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-two-column-form/screenshot.png"
      ],
      "publishTime": "2019-11-28T12:56:42.916Z",
      "updateTime": "2020-03-04T15:12:17.640Z",
      "__ID__": "f71366c6",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/34-zh-f71366c6.png",
          "description": "项目名称： 项目所属分类： 可访问日期： - 项目权限： 私密项目 内部项目 开放目 项目描述： 上传文件 请选择大小不超过5M的文件，支持doc，docx，xls，xlsx，zip格式 提交 取消"
        }
      ]
    },
    {
      "name": "WorkTable",
      "title": "WorkTable",
      "category": "DataDisplay",
      "views": [
        {
          "title": "",
          "props": {},
          "screenshot": "build/views/block_view1.png",
          "html": "build/views/block_view1.html"
        }
      ],
      "screenshot": "https://unpkg.com/@alifd/fusion-worktable/screenshot.png",
      "description": "工作台模板",
      "homepage": "https://unpkg.com/@alifd/fusion-worktable@0.1.9/build/index.html",
      "categories": [
        "DataDisplay"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/blocks/WorkTable",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-worktable",
        "version": "0.1.9",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "screenshots": [
        "https://unpkg.com/@alifd/fusion-worktable/screenshot.png"
      ],
      "publishTime": "2019-11-29T09:26:11.602Z",
      "updateTime": "2020-03-04T15:12:01.161Z",
      "__ID__": "801da119",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/35-zh-801da119.png",
          "description": "谢莉莉 xielili@aliwork-inc.com 选项卡一 选项卡二 选项卡三 我的任务 任务名称 所属阶段 优先级 蓝瓶咖啡线下体验店室内设计1 进行中 high 双12投放 Banner 进行中 high Global 大促活动 进行中 high Banner 拓展 进行中 middle 类目市场宣传设计 待处理 low 类目市场宣传设计 待处理 low 类目市场宣传设计 待处理 low 我的日程 March2020 Sun Mon Tue Wed Thu Fri Sat 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 1 2 3 4 5 6 7 8 9 10 11 共 2个日程 09:00 2小时 财经周会 深圳 T4-4-1；杭州 7-4-9-N 11:00 2小时 财经周会 深圳 T4-4-1；杭州 7-4-9-N 近期项目 Alibaba ICS 研发 一站式设计协作管理平台 计件平台研发管理 面向全集团各业务部门的外包设计及管理服务 素材中心研发管理 集团统一的素材管理平台 设计服务平台管理 从需求、缺陷、迭代的管理到统一的报告一应俱全 Alibaba XiNiu Survey 一站式用户主观数据分析平台 查看全部任务 我的项目 Fusion Design Alibaba ICS Retcode 前端监控 新零售事业部 前端物料中心 大财鲸 动态 阮小五 在 设计中台 新建项目 Fusion Design 4小时前 樊瑞 在 设计中台 新建项目 ICS Design 4小时前 李力 将 设计中台 更新至发布状态 4小时前 公孙胜 在 设计服务平台 新建项目 Done 4小时前 阮小七 在 设计中台 发布了 留言 4小时前 设置 快捷入口 操作一 操作二 操作三 操作四 操作五 操作六 操作七 操作八"
        }
      ]
    }
  ],
  "components": [
    {
      "name": "container",
      "title": "基础容器",
      "description": "",
      "homepage": "https://unpkg.com/@icedesign/container@1.0.5/build/index.html",
      "categories": [],
      "category": "",
      "repository": "https://github.com/ice-lab/react-materials/tree/master/components/container",
      "source": {
        "type": "npm",
        "npm": "@icedesign/container",
        "version": "1.0.5",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@alifd/next": "^1.x",
        "prop-types": "^15.5.8"
      },
      "screenshot": "",
      "screenshots": "",
      "publishTime": "2018-01-17T12:37:35.249Z",
      "updateTime": "2020-02-21T06:26:44.035Z",
      "__ID__": "e3f97a7b",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/0-zh-e3f97a7b.png",
          "description": "Container 区块容器组件 参数（props） 参数名 说明 必填 类型 默认值 备注 className 样式名 false string - style 样式 false object {} loading 加载时 loading 否 boolean false error 数据错误 否 任何数据类型的值 false empty 数据为空 否 任何数据类型的值 false title 标题 否 string - DEMO 列表 DEMO 基本展示 Hello World! import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import { Button } from '@alifd/next'; import IceContainer from '@icedesign/container'; class App extends Component { state = { } render() { return ( <div style={{ padding: '50px', background: '#ddd'}}> <IceContainer>Hello World!</IceContainer> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 示例导航 DEMO"
        }
      ]
    },
    {
      "name": "dynamic-icon",
      "title": "动态 Icon 组件",
      "description": "动态 Icon 组件",
      "homepage": "https://unpkg.com/@icedesign/data-binder@latest/build/index.html",
      "categories": [],
      "category": "",
      "repository": "https://github.com/ice-lab/react-materials/tree/master/components/dynamic-icon",
      "source": {
        "type": "npm",
        "npm": "@icedesign/dynamic-icon",
        "version": "0.1.8",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "classnames": "^2.2.5",
        "prop-types": "^15.5.8"
      },
      "screenshot": "",
      "screenshots": "",
      "publishTime": "2018-11-21T04:38:17.491Z",
      "updateTime": "2020-02-21T06:27:20.488Z",
      "__ID__": "7b5cfde6",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/1-zh-7b5cfde6.png",
          "description": "DataBinder 数据交互方案 ICE 前后端数据绑定、交互方案。基于一定的约定帮你在组件上绑定一些数据和用来更新数据的 API，让开发者专注于 render 逻辑，从而屏蔽掉 AJAX、state 管理等开发成本。 API 以下 API 会注入到 Class 中，通过 this.props.xxxx 的方式调用。 API 说明 类型 默认值 备注 updateBindingData 更新数据源 func bindingData 返回数据 object 使用 1. 配置数据源 DataBinder 基于 HOC 的思路，采用 decorator 的方式使用，即在 class 上面调用并配置相关信息即可生效。 @DataBinder({ '模块名 key': { // AJAX 部分的参数完全继承自 axios ，参数请详见：https://github.com/axios/axios url: 'http://xxxx.json', method: 'GET', params: { page: 1 }, // 接口默认数据 defaultBindingData: { } } }) class ListView extends Component { ... } 详细的解释下： 模块名 key：必填，每个 key 代表一个数据源（接口） defaultBindingData: 选填 该字段配置当前模块数据初始化默认值，如果当前模块有异步接口配置，则模块的字段需要与接口返回的数据字段一一对应。该参数可选，因为有些接口只需要提交成功即可，无需 UI 变化。 其他：选填，配置请求相关参数，完成前后端通信，默认基于 axios，因此这里可以使用 axios 的任意参数。同时业务可以自定义其他 request client。 2. 请求并使用数据源 对某个 React class 添加 DataBinder 绑定配置之后，DataBinder 会通过 HOC 在组件上添加一个 props bindingData，用来存放配置的所有数据，模块 key 为你对应的 DataSource key 的前部分，比如：配置 account 可以通过 this.props.bindingData.account 获取到被绑定的数据，第一次为 defaultBindingData 里面配置的数据。 因此你可以在你 render 部分的代码编写如下代码调用： @DataBinder({ listData: { url: '/getAccountTableList.json', }, }) class ListView extends Component { componentDidMount() { // 组件加载时获取数据源，数据获取完成会触发组件 render this.props.updateBindingData('dataSource'); } render() { const { listData } = this.props.bindingData; return ( <div> <Table loading={listData.__loading} dataSource={listData.list} /> </div> ); } } 常见问题 接口协议规范 DataBinder 对数据接口的 response 做了一层规范，不符合该规范的接口将无法正常获取到数据，response 规范： { // 必选：标记接口是否成功，非 SUCCESS 都视为失败 \"status\": \"SUCCESS\", // 可选：status 为非 SUCCESS 时显示报错 UI 会使用该字段 \"message\": \"成功\", // 必选：实际数据，会将 data 下的所有字段挂载在对应的 bindingData 上 \"data\": { \"dataSource\": [], \"page\": 1 } } 如果业务里的接口跟该规范不符，可以通过 responseFormatter 做一次转换。具体请参见组件 demo。 自定义前后端通信方式 requestClient DataBinder 默认使用 axios 完成前后端通信，实际场景里业务可能使用 jsonp，RPC 或者其他协议通信，此时需要通过自定义 requestClient 的方式实现，具体请参见组件 demo。 自定义请求 callback DataBinder 默认的请求成功和失败的行为是弹一个 Toast 将接口的 message 字段信息展示出来。如果你需要自定义全局的成功失败行为，可以通过自定义 callback 的方式实现，具体请参见组件 demo。 业务自定义 DataBinder 如果业务里出现类似上述所说的场景，比如：接口规范不一致、需要全局统一处理请求失败成功逻辑、使用非 axios 的方式请求数据（比如 jsonp），推荐基于 DataBinder 封装一个自定义的 DataBinder，然后代码里使用自定义 DataBinder，具体请参见组件 demo。 DEMO 列表 简单的用法 通过 GET 方式请求数据，基于 __loading 属性可以区分请求的不同状态，基于 __error 属性可以区分接口是否报错。 foo 的值： bar 主动获取新数据 数据加载中：否 接口是否报错：Network Error import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import DataBinder from '@icedesign/data-binder'; import { Button, Loading } from '@alifd/next'; @DataBinder({ fooData: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/success', defaultBindingData: { foo: 'bar' } } }) class App extends Component { componentDidMount() { this.props.updateBindingData('fooData', { params: { key: 'init' } }, (response) => { // 请求回调，可按需使用 console.log('数据加载完成啦', response); }); } refreshFoo = () => { this.props.updateBindingData('fooData', { params: { bar: 'foo' } }); }; render() { const {fooData} = this.props.bindingData; return ( <div> <Loading visible={fooData.__loading}> foo 的值： {fooData.foo} </Loading> <div style={{marginTop: 10}}> <Button onClick={this.refreshFoo}>主动获取新数据</Button> </div> <h3>数据加载中：{fooData.__loading ? '是' : '否'}</h3> <h3>接口是否报错：{fooData.__error ? fooData.__error.message : '无'}</h3> </div> ); } } ReactDOM.render(( <App /> ), mountNode); POST 请求获取数据 通过 POST 请求获取数据，POST 请求数据时，请求参数可以放在 url query 或者 body 上，具体由接口实现决定： url query: 通过 params 参数指定 body: 通过 data 参数指定 具体可参考 axios 的文档说明。 foo 的值： bar 主动获取新数据 import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import DataBinder from '@icedesign/data-binder'; import { Button, Loading } from '@alifd/next'; @DataBinder({ fooData: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/post', method: 'POST', defaultBindingData: { foo: 'bar' } } }) class App extends Component { componentDidMount() { this.props.updateBindingData('fooData', { // 参数放在 query 上 params: { key: 'init' } }); } refreshFoo = () => { this.props.updateBindingData('fooData', { // 参数放在 body 上 data: { bar: 'foo' } }); }; render() { const {fooData} = this.props.bindingData; return ( <div> <Loading visible={fooData.__loading}> foo 的值： {fooData.foo} </Loading> <div style={{marginTop: 10}}> <Button onClick={this.refreshFoo}>主动获取新数据</Button> </div> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 一个组件多个数据源 某些场景下，一个组件会用到多个数据源，通过 key 来区分即可。 foo1 的值： bar 请求获取 foo1 新数据 foo2 的值： bar 请求获取 foo2 新数据 当前页面是否有模块正在加载：否 import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import DataBinder from '@icedesign/data-binder'; import { Button, Loading } from '@alifd/next'; @DataBinder({ foo1Data: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/success', defaultBindingData: { foo: 'bar' } }, foo2Data: { url: 'https://www.easy-mock.com/mock/5c7c9334869f506acc184ff7/ice/foo2', defaultBindingData: { foo: 'bar' } } }) class App extends Component { refreshFoo1 = () => { this.props.updateBindingData('foo1Data', { params: { bar: 'foo' } }); }; refreshFoo2 = () => { this.props.updateBindingData('foo2Data', { params: { bar: 'foo' } }); }; render() { const {foo1Data, foo2Data} = this.props.bindingData; return ( <div> <div> <Loading visible={foo1Data.__loading}> <div> foo1 的值： {foo1Data.foo} </div> </Loading> <div style={{marginTop: 10}}> <Button onClick={this.refreshFoo1}>请求获取 foo1 新数据</Button> </div> </div> <div style={{marginTop: 30}}> <Loading visible={foo2Data.__loading}> <div> foo2 的值： {foo2Data.foo} </div> </Loading> <div style={{marginTop: 10}}> <Button onClick={this.refreshFoo2}>请求获取 foo2 新数据</Button> </div> </div> <h3>当前页面是否有模块正在加载：{this.props.bindingData.__loading ? '是' : '否'}</h3> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 接口不符合规范 通过 responseFormatter 格式化接口返回数据，适配跟 DataBinder 接口规范不一致的情况。 假设业务实际接口格式如下： { \"code\": 0, \"msg\": \"OK\", \"content\": { \"foo\": \"\" } } foo 的值： bar 请求获取新数据 import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import DataBinder from '@icedesign/data-binder'; import { Button, Loading } from '@alifd/next'; @DataBinder({ fooData: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/custom', responseFormatter: (responseHandler, body, response) => { // 拿到接口返回的 res 数据，做一些格式转换处理，使其符合 DataBinder 的要求 const newBody = { status: body.code === '1' ? 'SUCCESS' : 'ERROR', message: body.msg, data: body.content }; responseHandler(newBody, response); }, defaultBindingData: { foo: 'bar' } } }) class App extends Component { refreshFoo = () => { this.props.updateBindingData('fooData'); }; render() { const {fooData} = this.props.bindingData; return ( <div> <Loading visible={fooData.__loading}> foo 的值： {fooData.foo} </Loading> <div style={{marginTop: 10}}> <Button onClick={this.refreshFoo}>请求获取新数据</Button> </div> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 自定义请求 callback 自定义请求成功或者失败的处理逻辑：比如接口成功不弹出 toast foo1 的值： 默认值 请求获取新数据 import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import DataBinder from '@icedesign/data-binder'; import { Button, Loading, Message } from '@alifd/next'; @DataBinder({ fooData: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/success', success: (body, defaultCallback, originResponse) => { if (body.status !== 'SUCCESS') { // 后端返回的状态码错误 Message.error(body.message); } else { // // 成功不弹 toast，可以什么都不走 console.log('success'); } }, // error 有两类错误，一类是网络中断，请求没有发送成功；另一类是服务器接口报错 error: (originResponse, defaultCallback, err) => { // 失败弹 toast Message.error(err.message); }, defaultBindingData: { foo: '默认值' } } }) class App extends Component { refreshFoo = () => { this.props.updateBindingData('fooData', { params: { bar: 'foo' } }); }; render() { const {fooData} = this.props.bindingData; return ( <div> <Loading visible={fooData.__loading} shape=\"fusion-reactor\"> <div> foo1 的值： {fooData.foo} </div> </Loading> <div style={{marginTop: 10}}> <Button onClick={this.refreshFoo}>请求获取新数据</Button> </div> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 自定义请求客户端 本 Demo 演示自定义 requestClient：使用 jsonp 的方法发送请求，自定义的 requestClien 必须返回一个 Promise foo 的值： 默认值 请求获取新数据 import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import querystring from 'querystring'; import DataBinder from '@icedesign/data-binder'; import jsonp from 'jsonp'; import { Button, Loading } from '@alifd/next'; /** * 自定义的 json request client */ function request(opts) { return new Promise((resolve, reject) => { jsonp(opts.url + '?' + querystring.encode(opts.params), { name: 'callback' }, (err, data) => { if (err) { reject(err); } else { resolve({ data }); } }) }); } @DataBinder({ fooData: { url: 'https://sug.so.360.cn/suggest', defaultBindingData: { q: '默认值' }, responseFormatter: (responseHandler, body, response) => { const newBody = { success: 'SUCCESS', message: 'ok', data: body }; responseHandler(newBody, response); }, } }, { requestClient: request }) class App extends Component { refreshFoo = () => { this.props.updateBindingData('fooData', { params: { word: 'test' } }); }; render() { const {fooData} = this.props.bindingData; return ( <div> <Loading visible={fooData.__loading}> foo 的值： {fooData.q} </Loading> <div style={{marginTop: 10}}> <Button onClick={this.refreshFoo}>请求获取新数据</Button> </div> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 自定义 DataBinder 很多场景下，我们会遇到诸如以下 case： 业务接口规范跟 DataBinder 默认规范不一致 需要全局处理接口通用规范，比如：未登录、无权限、出错等 业务上使用非 AJAX 的方式做前后端通信，比如：jsonp 这些场景我们建议业务上对 DataBinder 包装一层，产出业务自身的一个 DataBinder。 请求成功不弹 toast foo 的值： 获取新数据 请求失败弹 toast Error： 获取新数据 请求失败不弹 toast Error： 获取新数据 请求未登录 foo 的值： 获取新数据 请求无权限 foo 的值： 获取新数据 import React, { Component } from 'react'; import ReactDOM from 'react-dom'; import DataBinder from '@icedesign/data-binder'; import { Button, Loading, Message } from '@alifd/next'; /** * 自定义一个 DataBinder，建议放在 src/components/DataBinder 下。支持以下特性： * - 通过 showSuccessToast/showErrorToast 配置是否要弹 toast * - 通过 responseFormatter 格式化后端接口 * - 基于 responseFormatter 实现未登录、无权限等逻辑 */ const CustomDataBinder = (options) => { // 重组 options let newOptions = {}; Object.keys(options).forEach(dataSourceKey => { const config = options[dataSourceKey]; const { showErrorToast = true, showSuccessToast = false } = config; newOptions[dataSourceKey] = { ...config, responseFormatter: (responseHandler, body, response) => { if (body.code === '-1') { // 未登录 Message.error('未登录，即将跳转到登录页面'); // location.reload(); return; } if (body.code === '-2') { // 无权限 Message.error('无权限，即将跳转无权限页面'); // location.reload(); return; } const newBody = { status: body.code === '0' ? 'SUCCESS' : 'ERROR', message: body.msg, data: body.content || {} }; responseHandler(newBody, response); }, success: (body, defaultCallback, originResponse) => { const {config} = originResponse; if (body.status !== 'SUCCESS') { // 后端返回的状态码错误 if (config.showErrorToast) { Message.error(body.message); } } else { if (config.showSuccessToast) { Message.success(body.message); } } }, error: (originResponse, defaultCallback, err) => { // 网络异常：404，302 等 const {config} = originResponse; if (config.showErrorToast) { Message.error(err.message); } } }; }); return DataBinder.call(this, newOptions); }; @CustomDataBinder({ successData: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/ok', showSuccessToast: false }, errorData: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/error', showErrorToast: true }, networkErrorData: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/errorssss', showErrorToast: false }, notLogin: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/not-login' }, noAuth: { url: 'https://www.easy-mock.com/mock/5cc669767a9a541c744c9be7/databinder/no-auth' } }) class App extends Component { updateData = key => { this.props.updateBindingData(key); }; render() { const { successData, errorData, notLogin, noAuth, networkErrorData } = this.props.bindingData; const itemStyle = { margin: '10px 0', boderBottom: '1px solid #999', }; return ( <div> <div style={itemStyle}> <div>请求成功不弹 toast</div> <Loading visible={successData.__loading}> foo 的值： {successData.foo} </Loading> <div style={{ marginTop: 10 }}> <Button onClick={this.updateData.bind(this, 'successData')}> 获取新数据 </Button> </div> </div> <div style={itemStyle}> <div>请求失败弹 toast</div> <Loading visible={errorData.__loading}> Error： {errorData.__error && errorData.__error.message} </Loading> <div style={{ marginTop: 10 }}> <Button onClick={this.updateData.bind(this, 'errorData')}> 获取新数据 </Button> </div> </div> <div style={itemStyle}> <div>请求失败不弹 toast</div> <Loading visible={networkErrorData.__loading}> Error： {networkErrorData.__error && networkErrorData.__error.message} </Loading> <div style={{ marginTop: 10 }}> <Button onClick={this.updateData.bind(this, 'networkErrorData')}> 获取新数据 </Button> </div> </div> <div style={itemStyle}> <div>请求未登录</div> <Loading visible={notLogin.__loading}> foo 的值： {notLogin.foo} </Loading> <div style={{ marginTop: 10 }}> <Button onClick={this.updateData.bind(this, 'notLogin')}> 获取新数据 </Button> </div> </div> <div style={itemStyle}> <div>请求无权限</div> <Loading visible={noAuth.__loading}>foo 的值： {noAuth.foo}</Loading> <div style={{ marginTop: 10 }}> <Button onClick={this.updateData.bind(this, 'noAuth')}> 获取新数据 </Button> </div> </div> </div> ); } } ReactDOM.render(<App />, mountNode); 示例导航 简单的用法 POST 请求获取数据 一个组件多个数据源 接口不符合规范 自定义请求 callback 自定义请求客户端 自定义 DataBinder"
        }
      ]
    },
    {
      "name": "foundation-symbol",
      "title": "基础符号表",
      "description": "基础符号表",
      "homepage": "https://unpkg.com/@icedesign/foundation-symbol@1.0.4/build/index.html",
      "categories": [],
      "category": "",
      "repository": "https://github.com/ice-lab/react-materials/tree/master/components/foundation-symbol",
      "source": {
        "type": "npm",
        "npm": "@icedesign/foundation-symbol",
        "version": "1.0.4",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@alifd/next": "^1.11.7",
        "classnames": "^2.2.5",
        "prop-types": "^15.6.0"
      },
      "screenshot": "",
      "screenshots": "",
      "publishTime": "2018-11-21T10:16:04.605Z",
      "updateTime": "2020-02-21T06:27:45.596Z",
      "__ID__": "dff7b7f6",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/2-zh-dff7b7f6.png",
          "description": "FoundationSymbol 基础符号表 基本图标集合。 基本使用 import React, { Component } from 'react'; import ReactDOM from 'react-dom'; import FoundationSymbol from '@icedesign/foundation-symbol'; class App extends Component { state = {}; render() { return <FoundationSymbol type=\"font-size\" />; } } ReactDOM.render(<App />, mountNode); 图标列表 DEMO 列表 简单的用法 本 Demo 演示最基础的用法。 自定义图标集图标： import React, { Component } from 'react'; import ReactDOM from 'react-dom'; import FoundationSymbol from '@icedesign/foundation-symbol'; class App extends Component { state = {}; render() { return ( <div> 自定义图标集图标： <div> <FoundationSymbol type=\"bangzhu\" size=\"xxs\" /> <FoundationSymbol type=\"bangzhu\" size=\"xs\" /> <FoundationSymbol type=\"bangzhu\" size=\"small\" /> <FoundationSymbol type=\"bangzhu\" size=\"medium\" /> <FoundationSymbol type=\"bangzhu\" size=\"large\" /> <FoundationSymbol type=\"bangzhu\" size=\"xl\" /> <FoundationSymbol type=\"bangzhu\" size=\"xxl\" /> <FoundationSymbol type=\"bangzhu\" size=\"xxxl\" /> </div> <div> <FoundationSymbol type=\"font-size\" /> </div> </div> ); } } ReactDOM.render(<App />, mountNode); 示例图标 展示更多的用法 bangzhucascadeshome2activityqrcodelightlinkcopycreativephoneangle-downedithourglasscouponsrepairshopcarcrossclocksearchmessageexchangedeleteangle-upredpacketspeakertransfer-lefttransfer-rightcustomizedownpublishattachmenteyelocationbackwardforwardrmbnoticeyonghushopfans2chartlockcodehornhomebellpersonboldbackground-colorfont-colorunderlineitalicsfont-sizeol-listalign-centeralign-flexfloat-fullfloat-leftquotealign-rightalign-leftul-liststoretopicanchorvideosucaipicturegiftaskguanbiquestionmailimagequestion2keycontentedit2menucollapsecorrectdirectoryfanscompassquote2gif2pinvideo2itemmaterialshezhiskin_lightrequ import React, { Component } from 'react'; import ReactDOM from 'react-dom'; import CopyToClipboard from 'react-copy-to-clipboard'; import { Message } from '@alifd/next'; import FoundationSymbol from '@icedesign/foundation-symbol'; const all = [ 'bangzhu', 'cascades', 'home2', 'activity', 'qrcode', 'light', 'link', 'copy', 'creative', 'phone', 'angle-down', 'edit', 'hourglass', 'coupons', 'repair', 'shopcar', 'cross', 'clock', 'search', 'message', 'exchange', 'delete', 'angle-up', 'redpacket', 'speaker', 'transfer-left', 'transfer-right', 'customize', 'down', 'publish', 'attachment', 'eye', 'location', 'backward', 'forward', 'rmb', 'notice', 'yonghu', 'shop', 'fans2', 'chart', 'lock', 'code', 'horn', 'home', 'bell', 'person', 'bold', 'background-color', 'font-color', 'underline', 'italics', 'font-size', 'ol-list', 'align-center', 'align-flex', 'float-full', 'float-left', 'quote', 'align-right', 'align-left', 'ul-list', 'store', 'topic', 'anchor', 'video', 'sucai', 'picture', 'gif', 'task', 'guanbi', 'question', 'mail', 'image', 'question2', 'key', 'content', 'edit2', 'menu', 'collapse', 'correct', 'directory', 'fans', 'compass', 'quote2', 'gif2', 'pin', 'video2', 'item', 'material', 'shezhi', 'skin_light', 'requ' ]; class App extends Component { copied = () => { Message.success('复制成功！'); }; renderIcon = (type, idx) => { return ( <div style={{ display: 'inline-block', minWidth: '150px', marginBottom: '15px', cursor: 'pointer' }} key={idx} > <FoundationSymbol size=\"large\" type={type} /> <CopyToClipboard text={type} onCopy={this.copied}> <span style={{ marginLeft: '5px' }}>{type}</span> </CopyToClipboard> </div> ); }; render() { return <div>{all.map(this.renderIcon)}</div>; } } ReactDOM.render(<App />, mountNode); 示例导航 简单的用法 示例图标"
        }
      ]
    },
    {
      "name": "img",
      "title": "ICE 图片组件",
      "description": "ICE 图片组件。",
      "homepage": "https://unpkg.com/@icedesign/img@1.0.4/build/index.html",
      "categories": [],
      "category": "",
      "repository": "https://github.com/ice-lab/react-materials/tree/master/components/img",
      "source": {
        "type": "npm",
        "npm": "@icedesign/img",
        "version": "1.0.4",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "classnames": "^2.2.5",
        "prop-types": "^15.5.10"
      },
      "screenshot": "",
      "screenshots": "",
      "publishTime": "2017-12-26T06:51:40.651Z",
      "updateTime": "2020-02-21T06:28:31.859Z",
      "__ID__": "1aa5bdd",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/3-zh-1aa5bdd.png",
          "description": "Img 图片组件 ICE 图片组件，用来增强图片显示效果。 安装和升级 npm i @icedesign/img -S 参数（props） 参数名 说明 必填 类型 默认值 可选值 备注 type 图片显示模式 false string cover cover、contain src 图片 url true string shape 形状展现 false string sharp circle、sharp、rounded title 图片的 title，hover 上去会显示出来 false string '' alt 图片的 alt 通常用于屏幕阅读器（盲人）识别 false string '' className 图片的 className false string '' style 图片的 inline style false object {} width 图片显示宽度 false number 计算图片必需，不传则表现形式等同于普通 img 标签。 height 图片显示高度 false number 计算图片必需，不传则表现形式等同于普通 img 标签。 errorImgSrc 图片加载失败的兜底图片 false string 如果图片加载失败，那么将用这张图来代替 onError 图片加载失败的回调方法 false function 如果图片加载失败，那么将执行这个 callback 让你添加一些容错逻辑 enableAliCDNSuffix 是否启用 Ali CDN 自动裁切参数 false false 如果在 cover 模式下，图片高度太高可能会拉伸的比较模糊 图片底部存在 3px 空隙的解决方法 如果你将当前组件用来展示图片放在其他组件内，或者使用当前组件时有外边线，细致的你会发现底部可能存在 3px 的间隙： 这是由于图片的 inline-block 渲染模式导致的，你无需理解背后的原理，如果你想去掉这个间隙，可以直接在当前组件加上一行 CSS 即可： <Img style={{ verticalAlign: 'middle', }} src=\"xxx\" /> 图片尺寸性能优化 图片原图可能会非常大，例如 https://img.alicdn.com/tps/TB1qfWuMVXXXXcEXpXXXXXXXXXX-434-254.png 会达到 200kb 但实际放在页面上，希望它只显示 200x100 这样的尺寸，此时性能就会很差。 如果你的图片使用 img.alicdn.com 这个 CDN 地址，那么可以传入 props enableAliCDNSuffix={true} 将自动开启 Ali CDN 裁切参数，会将图片 url 变成 https://img.alicdn.com/tps/TB1qfWuMVXXXXcEXpXXXXXXXXXX-434-254.png_400x200q90.jpg 进行压缩优化，压缩之后图片只有 116kb，加载性能会提升非常多，建议默认开启使用。 如果在 cover 模式下，如果图片尺寸跟配置的显示尺寸差距太大，可能会导致拉伸变模糊，如果绝大部分图片都是此类尺寸，可以设置 false 去掉这个功能。 DEMO 列表 简单的用法 本 Demo 演示最基础的用法。 cover 模式强调填充铺平 contain 模式强调信息全部展示 切换新图片会重新计算尺寸 import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import {Button} from '@alifd/next'; import Img from '@icedesign/img'; class App extends Component { state = { url1: 'https://img.alicdn.com/tfs/TB1vyxuwHrpK1RjSZTEXXcWAVXa-1350-900.jpg', url2: 'https://img.alicdn.com/tfs/TB1A8NCLNYaK1RjSZFnXXa80pXa-2580-1032.jpg' }; changeImgs = () => { this.setState({ url1: getImgs(this.state.url1), url2: getImgs(this.state.url1) }); }; render() { return ( <div> <h1>cover 模式强调填充铺平</h1> <Img enableAliCDNSuffix={true} width={400} height={200} src={this.state.url1} type=\"cover\" style={{border: '1px solid #ccc', margin: '10px'}} /> <Img enableAliCDNSuffix={false} width={400} height={200} src={this.state.url2} type=\"cover\" style={{border: '1px solid #ccc', margin: '10px'}} /> <h1>contain 模式强调信息全部展示</h1> <Img enableAliCDNSuffix={true} width={400} height={200} src={this.state.url1} type=\"contain\" style={{border: '1px solid #ccc', margin: '10px'}} /> <Img enableAliCDNSuffix={true} width={400} height={200} src={this.state.url2} type=\"contain\" style={{border: '1px solid #ccc', margin: '10px'}} /> <div> <Button type=\"primary\" style={{marginTop: 20}} onClick={this.changeImgs}>切换新图片会重新计算尺寸</Button> </div> </div> ); } } function getImgs(url) { if (url === 'https://img.alicdn.com/imgextra/i3/2779138589/TB2_gtLlrBmpuFjSZFuXXaG_XXa_!!2779138589.jpg') { return 'https://img.alicdn.com/tfs/TB1vyxuwHrpK1RjSZTEXXcWAVXa-1350-900.jpg'; } return 'https://img.alicdn.com/imgextra/i3/2779138589/TB2_gtLlrBmpuFjSZFuXXaG_XXa_!!2779138589.jpg'; } ReactDOM.render(( <App /> ), mountNode); 用在表格中 本 Demo 演示在表格中使用图片。 封面图 标题 当前图片模式：contain 这是一张示例图片这是一张示例图片这是一张示例图片这是一张示例图片 当前图片模式：cover 示例图片2号示例图片2号示例图片2号示例图片2号 当前图片模式：cover 这是一张示例图片这是一张示例图片这是一张示例图片这是一张示例图片 当前图片模式：contain 示例图片2号示例图片2号示例图片2号示例图片2号 当前图片模式：cover 这是一张示例图片这是一张示例图片这是一张示例图片这是一张示例图片 当前图片模式：cover 示例图片2号示例图片2号示例图片2号示例图片2号 当前图片模式：contain 这是一张示例图片这是一张示例图片这是一张示例图片这是一张示例图片 当前图片模式：cover 示例图片2号示例图片2号示例图片2号示例图片2号 import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import {Table} from '@alifd/next'; import Img from '@icedesign/img'; class App extends Component { state = { } renderCover = (value, index, record) => { let type = 'cover'; if (index % 3 === 0) { type = 'contain'; } return ( <div> <Img enableAliCDNSuffix={true} width={200} height={100} src={record.src} type={type} /> 当前图片模式：{type} </div> ); }; render() { return ( <div> <Table dataSource={tableData} > <Table.Column title=\"封面图\" cell={this.renderCover} /> <Table.Column title=\"标题\" dataIndex=\"title\" /> </Table> </div> ); } } const tableData = [{ src: 'https://img.alicdn.com/tfs/TB1vyxuwHrpK1RjSZTEXXcWAVXa-1350-900.jpg', title: '这是一张示例图片这是一张示例图片这是一张示例图片这是一张示例图片', }, { src: 'https://img.alicdn.com/tfs/TB1A8NCLNYaK1RjSZFnXXa80pXa-2580-1032.jpg', title: '示例图片2号示例图片2号示例图片2号示例图片2号' }, { src: 'https://img.alicdn.com/tfs/TB1vyxuwHrpK1RjSZTEXXcWAVXa-1350-900.jpg', title: '这是一张示例图片这是一张示例图片这是一张示例图片这是一张示例图片', }, { src: 'https://img.alicdn.com/tfs/TB1A8NCLNYaK1RjSZFnXXa80pXa-2580-1032.jpg', title: '示例图片2号示例图片2号示例图片2号示例图片2号' }, { src: 'https://img.alicdn.com/tfs/TB1vyxuwHrpK1RjSZTEXXcWAVXa-1350-900.jpg', title: '这是一张示例图片这是一张示例图片这是一张示例图片这是一张示例图片', }, { src: 'https://img.alicdn.com/tfs/TB1A8NCLNYaK1RjSZFnXXa80pXa-2580-1032.jpg', title: '示例图片2号示例图片2号示例图片2号示例图片2号' }, { src: 'https://img.alicdn.com/tfs/TB1vyxuwHrpK1RjSZTEXXcWAVXa-1350-900.jpg', title: '这是一张示例图片这是一张示例图片这是一张示例图片这是一张示例图片', }, { src: 'https://img.alicdn.com/tfs/TB1A8NCLNYaK1RjSZFnXXa80pXa-2580-1032.jpg', title: '示例图片2号示例图片2号示例图片2号示例图片2号' }]; ReactDOM.render(( <App /> ), mountNode); 图片加载失败 图片加载失败的处理方法。 图片加载失败可以监听 onError 事件，并改变 State 实现 用于对图片加载失败做更多业务逻辑处理 或者通过设置 errorImgSrc props 会自动在出错的时候替换掉 import React, {Component} from 'react' import ReactDOM from 'react-dom'; import Img from '@icedesign/img'; class App extends Component { state = { imgSrc: 'https://im---g.alicdn.com/tps/TB1qfWuMVXXXXcEXpXXXXXXXXXX-434-254.png' } handleImgError = () => { // 你可以额外添加一些容错处理业务逻辑 // console.log('图片报错啦！日志记录下'); this.setState({ imgSrc: 'https://img.alicdn.com/tps/TB11W.WOXXXXXcbaXXXXXXXXXXX-496-310.png' }); }; render() { return ( <div> <h1>图片加载失败可以监听 onError 事件，并改变 State 实现</h1> <p>用于对图片加载失败做更多业务逻辑处理</p> <Img enableAliCDNSuffix={true} width={400} height={200} onError={this.handleImgError} src={this.state.imgSrc} type=\"cover\" style={{border: '1px solid #ccc', margin: '10px'}} /> <h1>或者通过设置 errorImgSrc props 会自动在出错的时候替换掉</h1> <Img enableAliCDNSuffix={true} width={400} height={200} errorImgSrc=\"https://img.alicdn.com/tps/TB11W.WOXXXXXcbaXXXXXXXXXXX-496-310.png\" src=\"https://im---g.alicdn.com/tps/TB1qfWuMVXXXXcEXpXXXXXXXXXX-434-254.png\" type=\"cover\" style={{border: '1px solid #ccc', margin: '10px'}} /> </div> ); } } ReactDOM.render(( <App /> ), mountNode); shape 形状用法 本 Demo 演示 shape 形状的用法。 shape 默认为 rounded sharp 无圆角 circle 圆形 cover 模式下展示 contain 模式下展示 import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import Img from '@icedesign/img'; class App extends Component { state = { } render() { return ( <div> <h1>cover 模式下展示</h1> <Img enableAliCDNSuffix={true} width={200} height={200} src=\"//img.alicdn.com/tfs/TB1K..3PpXXXXa4XFXXXXXXXXXX-311-199.png\" type=\"cover\" shape=\"circle\" style={{border: '1px solid #ccc', margin: '10px'}} /> <Img enableAliCDNSuffix={true} width={300} height={200} src=\"//img.alicdn.com/tfs/TB1oPNcPFXXXXXQXpXXXXXXXXXX-341-202.png\" type=\"cover\" shape=\"sharp\" style={{border: '1px solid #ccc', margin: '10px'}} /> <Img enableAliCDNSuffix={true} width={300} height={200} src=\"//img.alicdn.com/tfs/TB1oPNcPFXXXXXQXpXXXXXXXXXX-341-202.png\" type=\"cover\" style={{border: '1px solid #ccc', margin: '10px'}} /> <h1>contain 模式下展示</h1> <Img enableAliCDNSuffix={true} width={300} height={200} src=\"//img.alicdn.com/tfs/TB1A2c4PpXXXXaiXFXXXXXXXXXX-274-201.png\" type=\"contain\" style={{border: '1px solid #ccc', margin: '10px'}} /> <Img enableAliCDNSuffix={true} width={350} height={200} src=\"//img.alicdn.com/tfs/TB17wwYPpXXXXXHXVXXXXXXXXXX-297-199.png\" type=\"contain\" shape=\"sharp\" style={{border: '1px solid #ccc', margin: '10px'}} /> <Img enableAliCDNSuffix={true} width={200} height={200} src=\"//img.alicdn.com/tfs/TB17wwYPpXXXXXHXVXXXXXXXXXX-297-199.png\" type=\"contain\" shape=\"circle\" style={{border: '1px solid #ccc', margin: '10px'}} /> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 示例导航 简单的用法 用在表格中 图片加载失败 shape 形状用法"
        }
      ]
    },
    {
      "name": "qrcode",
      "title": "二维码组件",
      "description": "飞冰 二维码组件",
      "homepage": "https://unpkg.com/@icedesign/qrcode@1.0.5/build/index.html",
      "categories": [],
      "category": "",
      "repository": "https://github.com/ice-lab/react-materials/tree/master/components/qrcode",
      "source": {
        "type": "npm",
        "npm": "@icedesign/qrcode",
        "version": "1.0.5",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "classnames": "^2.2.5",
        "@alifd/next": "^1.x",
        "prop-types": "^15.6.0",
        "qrcode.react": "^0.8.0"
      },
      "screenshot": "",
      "screenshots": "",
      "publishTime": "2018-08-14T16:12:03.090Z",
      "updateTime": "2020-02-21T06:30:23.657Z",
      "__ID__": "1ab984ac",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/4-zh-1ab984ac.png",
          "description": "Qrcode 二维码 二维码组件 参数（Props） 参数名 说明 必填 类型 默认值 可选值 value 二维码的展示内容 是 string 无 size 二维码的尺寸 否 number 128 bgColor 二维码背景色 否 string #ffffff fgColor 二维码前景色 否 string #000000 level 二维码的纠错等级 否 string L [L, M, Q, H] text 二维码下方文案 否 string 无 align 二维码展示位置 否 string left [left, right, top, bottom] triggerSize 触发器 icon 的大小 否 string medium 可选 xxs, xs, small, medium, large, xl, xxl triggerStyle 触发器 icon 的 inline-style 否 object {} 子组件 Qrcode.Panel 直接展示的二维码组件 参数（Props） 参数 说明 必填 类型 默认值 可选值 value 二维码的展示内容 是 string 无 size 二维码的尺寸 否 number 128 bgColor 二维码背景色 否 string #ffffff fgColor 二维码前景色 否 string #000000 level 二维码的纠错等级 否 string L [L, M, Q, H] text 二维码下方文案 否 string 无 DEMO 列表 简单的用法 展示二维码, 默认左侧浮出, 可设置 align=\"right\" 右边浮出. triggerSize 可选值： xxs, xs, small, medium, large, xl, xxl 分别演示二维码上下左右展示的效果 左 上 下 右 支持通过 triggerSize props 设置 Icon 大小 import React from 'react'; import Qrcode from '@icedesign/qrcode'; import ReactDOM from 'react-dom'; ReactDOM.render( <div> <div> <p>分别演示二维码上下左右展示的效果</p> <div style={{ textAlign: 'center' }}> <span>左 </span> <Qrcode value=\"http://www.taobao.com\" text=\"手机淘宝扫码查看\" /> &nbsp;&nbsp; <span>上 </span> <Qrcode value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"top\" /> &nbsp;&nbsp; <span>下 </span> <Qrcode value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"bottom\" /> &nbsp;&nbsp; <span>右 </span> <Qrcode value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"right\" /> </div> </div> <div> <p>支持通过 triggerSize props 设置 Icon 大小</p> <Qrcode triggerSize=\"xxs\" value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"right\" /> <br /> <Qrcode triggerSize=\"xs\" value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"right\" /> <br /> <Qrcode triggerSize=\"small\" value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"right\" /> <br /> <Qrcode triggerSize=\"medium\" value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"right\" /> <br /> <Qrcode triggerSize=\"large\" value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"right\" /> <br /> <Qrcode triggerSize=\"xl\" value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"right\" /> <br /> <Qrcode triggerSize=\"xxl\" value=\"https://alibaba.github.io/ice\" text=\"进入 ICE 官网\" align=\"right\" /> <br /> </div> </div>, mountNode ); 独立二维码 - 自定义元素 直接展示二维码，没有 Hover 的动作过程。 复制连接 import React from 'react'; import ReactDOM from 'react-dom'; import Qrcode, { Panel } from '@icedesign/qrcode'; ReactDOM.render( <Panel value=\"https://www.taobao.com\" text={<div style={{ color: 'red' }}>复制连接</div>} />, mountNode ); 独立二维码 直接展示二维码，没有 Hover 的动作过程。 使用手机淘宝扫码查看 import React from 'react'; import ReactDOM from 'react-dom'; import Qrcode, { Panel } from '@icedesign/qrcode'; ReactDOM.render( <Panel value=\"https://www.taobao.com\" text=\"使用手机淘宝扫码查看\" />, mountNode ); 二维码展示自定义尺寸 size 可设置二维码尺寸大小默认为：128。 大小直接展示二维码，没有 Hover 的动作过程。尺寸为 150 import React from 'react'; import ReactDOM from 'react-dom'; import Qrcode, { Panel } from '@icedesign/qrcode'; ReactDOM.render(<Panel value=\"https://www.taobao.com\" size={150} />, mountNode); 二维码展示自定义颜色 直接展示二维码，没有 Hover 的动作过程。颜色为红色。 fgColor 前景色默认为黑色，以下展示修改橙色 #ff4400。 import React from 'react'; import ReactDOM from 'react-dom'; import Qrcode, { Panel } from '@icedesign/qrcode'; ReactDOM.render( <Panel value=\"https://www.taobao.com\" fgColor=\"#ff4400\" />, mountNode ); 二维码展示自定义背景颜色 直接展示二维码，没有 Hover 的动作过程。 bgColor 背景色默认为白色 #ffffff，以下展示修改橙色 #ff4400。 import React from 'react'; import ReactDOM from 'react-dom'; import Qrcode, { Panel } from '@icedesign/qrcode'; ReactDOM.render( <Panel value=\"https://www.taobao.com\" bgColor=\"#ff4400\" />, mountNode ); 二维码展示自定义编码等级 level 二维码中有四种级别的纠错，二维码中有四种级别的纠错。默认为： L 纠错等级 修正率 L 水平 7%的字码可被修正 M 水平 15%的字码可被修正 Q 水平 25%的字码可被修正 H 水平 30%的字码可被修正 import React from 'react'; import ReactDOM from 'react-dom'; import Qrcode, { Panel } from '@icedesign/qrcode'; ReactDOM.render( <div> <Panel value=\"https://www.taobao.com\" level=\"L\" /> <hr /> <Panel value=\"https://www.taobao.com\" level=\"M\" /> <hr /> <Panel value=\"https://www.taobao.com\" level=\"Q\" /> <hr /> <Panel value=\"https://www.taobao.com\" level=\"H\" /> </div>, mountNode ); 示例导航 简单的用法 独立二维码 - 自定义元素 独立二维码 二维码展示自定义尺寸 二维码展示自定义颜色 二维码展示自定义背景颜色 二维码展示自定义编码等级"
        }
      ]
    },
    {
      "name": "title",
      "title": "标题组件",
      "description": "标题组件",
      "homepage": "https://unpkg.com/@icedesign/title@1.0.5/build/index.html",
      "categories": [],
      "category": "",
      "repository": "https://github.com/ice-lab/react-materials/tree/master/components/title",
      "source": {
        "type": "npm",
        "npm": "@icedesign/title",
        "version": "1.0.5",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "classnames": "^2.2.5",
        "prop-types": "^15.5.10",
        "@alifd/next": "^1.x"
      },
      "screenshot": "",
      "screenshots": "",
      "publishTime": "2017-12-26T07:15:25.464Z",
      "updateTime": "2020-02-21T06:31:38.887Z",
      "__ID__": "a5173961",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/5-zh-a5173961.png",
          "description": "Title 标题组件 标题组件。 参数（props） 参数名 说明 必填 类型 默认值 可选值 备注 text 要显示的文本 否 string subtitle 二级标题 否 string 或 React.component decoration 是否有左边竖线 否 boolean true true/false children 要显示的内容，支持复杂 component 否 string、components DEMO 列表 简单的用法 本 Demo 演示最基础的用法。 简单的标题 content 简单的标题我不是一个简单的标题 content import React, {Component} from 'react'; import ReactDOM from 'react-dom'; import IceTitle from '@icedesign/title'; class App extends Component { state = { } render() { const com = <span>我不是一个简单的标题</span> return ( <div> <IceTitle text=\"简单的标题\" /> <div style={{ background:'#999', color:'#666', height:'100px', textAlign:'center', paddingTop:'40px' }} >content</div> <IceTitle text=\"简单的标题\" subtitle={com}/> <div style={{ background:'#999', color:'#666', height:'100px', textAlign:'center', paddingTop:'40px' }} >content</div> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 里面包裹更复杂的结构 里面可以包裹更加附加的结构。 基本数据 content 主标题副标题 content import React, {Component} from 'react' import ReactDOM from 'react-dom'; import {Balloon, Icon} from '@alifd/next'; import IceTitle from '@icedesign/title'; class App extends Component { state = { } render() { return ( <div> <IceTitle> 基本数据 &nbsp; <Balloon trigger={<Icon type=\"help\" style={{position: 'relative', color:'#666666'}} />} align=\"r\" triggerType=\"hover\"> 这里是基本数据的更多描述信息。 </Balloon> </IceTitle> <div style={{ background:'#999', color:'#666', height:'100px', textAlign:'center', paddingTop:'40px' }} >content</div> <IceTitle text=\"主标题\" subtitle=\"副标题\" link=\"http://www.taobao.com\" decoration={true} /> <div style={{ background:'#999', color:'#666', height:'100px', textAlign:'center', paddingTop:'40px' }} >content</div> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 没有左边竖线的用法 没有左边竖线的用法。 主标题副标题 content 主标题 content import React, {Component} from 'react' import ReactDOM from 'react-dom'; import {Balloon, Icon} from '@alifd/next'; import IceTitle from '@icedesign/title'; class App extends Component { state = { } render() { return ( <div> <IceTitle text=\"主标题\" subtitle=\"副标题\" link=\"http://www.taobao.com\" decoration={false} /> <div style={{ background:'#999', color:'#666', height:'100px', textAlign:'center', paddingTop:'40px' }} >content</div> <IceTitle text=\"主标题\" link=\"http://www.taobao.com\" decoration={false} /> <div style={{ background:'#999', color:'#666', height:'100px', textAlign:'center', paddingTop:'40px' }} >content</div> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 自定义样式 自定义样式的 demo。 基本信息 content 主标题副标题 content import React, {Component} from 'react' import ReactDOM from 'react-dom'; import IceTitle from '@icedesign/title'; class App extends Component { state = { } render() { return ( <div> <IceTitle className=\"custom-class\" style={{marginTop: 100}} text=\"基本信息\" /> <div style={{ background:'#999', color:'#666', height:'100px', textAlign:'center', paddingTop:'40px' }} >content</div> <IceTitle text=\"主标题\" subtitle=\"副标题\" decoration={true} /> <div style={{ background:'#999', color:'#666', height:'100px', textAlign:'center', paddingTop:'40px' }} >content</div> </div> ); } } ReactDOM.render(( <App /> ), mountNode); 示例导航 简单的用法 里面包裹更复杂的结构 没有左边竖线的用法 自定义样式"
        }
      ]
    }
  ],
  "scaffolds": [
    {
      "name": "Fusion Design Pro - JS",
      "title": "Fusion Design Pro - JS",
      "category": "Basic",
      "screenshot": "https://img.alicdn.com/tfs/TB16ftixUY1gK0jSZFMXXaWcVXa-2880-1800.png",
      "views": [
        {
          "title": "分析页面",
          "path": "#/dashboard/analysis",
          "screenshot": "build/views/page0.png",
          "html": "build/views/page0.html"
        },
        {
          "title": "监控页面",
          "path": "#/dashboard/monitor",
          "screenshot": "build/views/page1.png",
          "html": "build/views/page1.html"
        },
        {
          "title": "工作台",
          "path": "#/dashboard/workplace",
          "screenshot": "build/views/page2.png",
          "html": "build/views/page2.html"
        },
        {
          "title": "单列表单",
          "path": "#/form/basic",
          "screenshot": "build/views/page3.png",
          "html": "build/views/page3.html"
        },
        {
          "title": "两列表单",
          "path": "#/form/two",
          "screenshot": "build/views/page4.png",
          "html": "build/views/page4.html"
        },
        {
          "title": "三列表单",
          "path": "#/form/three",
          "screenshot": "build/views/page5.png",
          "html": "build/views/page5.html"
        },
        {
          "title": "四列表单",
          "path": "#/form/four",
          "screenshot": "build/views/page6.png",
          "html": "build/views/page6.html"
        },
        {
          "title": "分步表单",
          "path": "#/form/step",
          "screenshot": "build/views/page7.png",
          "html": "build/views/page7.html"
        },
        {
          "title": "分类表单",
          "path": "#/form/classified",
          "screenshot": "build/views/page8.png",
          "html": "build/views/page8.html"
        },
        {
          "title": "分组表单",
          "path": "#/form/group",
          "screenshot": "build/views/page9.png",
          "html": "build/views/page9.html"
        },
        {
          "title": "流程表单",
          "path": "#/form/flow",
          "screenshot": "build/views/page10.png",
          "html": "build/views/page10.html"
        },
        {
          "title": "分级表单",
          "path": "#/form/hierarchical",
          "screenshot": "build/views/page11.png",
          "html": "build/views/page11.html"
        },
        {
          "title": "基础列表",
          "path": "#/list/basic",
          "screenshot": "build/views/page12.png",
          "html": "build/views/page12.html"
        },
        {
          "title": "卡片列表",
          "path": "#/list/card",
          "screenshot": "build/views/page13.png",
          "html": "build/views/page13.html"
        },
        {
          "title": "表格列表",
          "path": "#/list/table",
          "screenshot": "build/views/page14.png",
          "html": "build/views/page14.html"
        },
        {
          "title": "基础详情",
          "path": "#/detail/basic",
          "screenshot": "build/views/page15.png",
          "html": "build/views/page15.html"
        },
        {
          "title": "高级详情",
          "path": "#/detail/advanced",
          "screenshot": "build/views/page16.png",
          "html": "build/views/page16.html"
        },
        {
          "title": "成功页面",
          "path": "#/feedback/success",
          "screenshot": "build/views/page17.png",
          "html": "build/views/page17.html"
        },
        {
          "title": "失败页面",
          "path": "#/feedback/fail",
          "screenshot": "build/views/page18.png",
          "html": "build/views/page18.html"
        },
        {
          "title": "403",
          "path": "#/feedback/403",
          "screenshot": "build/views/page19.png",
          "html": "build/views/page19.html"
        },
        {
          "title": "404",
          "path": "#/feedback/404",
          "screenshot": "build/views/page20.png",
          "html": "build/views/page20.html"
        },
        {
          "title": "500",
          "path": "#/feedback/500",
          "screenshot": "build/views/page21.png",
          "html": "build/views/page21.html"
        },
        {
          "title": "系统设置",
          "path": "#/settings",
          "screenshot": "build/views/page22.png",
          "html": "build/views/page22.html"
        },
        {
          "title": "个人设置",
          "path": "#/person",
          "screenshot": "build/views/page23.png",
          "html": "build/views/page23.html"
        },
        {
          "title": "登录",
          "path": "#/login",
          "screenshot": "build/views/page24.png",
          "html": "build/views/page24.html"
        },
        {
          "title": "注册",
          "path": "#/register",
          "screenshot": "build/views/page25.png",
          "html": "build/views/page25.html"
        }
      ],
      "description": "使用 JavaScript，包含大量 UI 区块，比如图表、表单等。",
      "homepage": "https://unpkg.com/@alifd/fusion-design-pro-js@0.1.14/build/index.html",
      "categories": [
        "Basic"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/scaffolds/fusion-design-pro-js",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-design-pro-js",
        "version": "0.1.14",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@alifd/next": "^1.19.4",
        "moment": "^2.24.0",
        "react": "^16.4.1",
        "react-dom": "^16.4.1",
        "@antv/data-set": "^0.10.2",
        "bizcharts": "^3.5.6",
        "@alifd/theme-design-pro": "^0.x",
        "react-intl": "^2.8.0",
        "prop-types": "^15.5.8",
        "@types/react": "^16.9.13",
        "@types/react-dom": "^16.9.4"
      },
      "screenshots": [
        "https://img.alicdn.com/tfs/TB16ftixUY1gK0jSZFMXXaWcVXa-2880-1800.png"
      ],
      "publishTime": "2019-12-27T08:53:04.370Z",
      "updateTime": "2020-03-12T08:50:27.425Z",
      "__ID__": "a2d8e943",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/0-zh-a2d8e943.png",
          "description": "Logo 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 MyName 数据页面 表单页面 列表页面 详情页面 结果&缺省 设置页面 登录&注册 Dashboard/分析页面 分析页面 总销售额 123,456 周同比:10.1↑ 访问量 123,456 周同比:12.0↑ 门店量 82,234 周同比:10.1↑ 门店活动效果 123,456 周同比:10.1↑ 区域销售 亚洲 40% 欧洲 30% 南非 20% 美洲 10% 亚洲 商品类目1 6,123 商品类目2 132,4 周同比 45%↑ 销售额类别占比 类目一 类目二 类目三 销售额 ¥ 183112 消费数据 Alibaba Fusion © 2019-现在 Alibaba Fusion & ICE"
        }
      ]
    },
    {
      "name": "Fusion Design Pro - TS",
      "title": "Fusion Design Pro - TS",
      "category": "Basic",
      "screenshot": "https://img.alicdn.com/tfs/TB16ftixUY1gK0jSZFMXXaWcVXa-2880-1800.png",
      "views": [
        {
          "title": "分析页面",
          "path": "#/dashboard/analysis",
          "screenshot": "build/views/page0.png",
          "html": "build/views/page0.html"
        },
        {
          "title": "监控页面",
          "path": "#/dashboard/monitor",
          "screenshot": "build/views/page1.png",
          "html": "build/views/page1.html"
        },
        {
          "title": "工作台",
          "path": "#/dashboard/workplace",
          "screenshot": "build/views/page2.png",
          "html": "build/views/page2.html"
        },
        {
          "title": "单列表单",
          "path": "#/form/basic",
          "screenshot": "build/views/page3.png",
          "html": "build/views/page3.html"
        },
        {
          "title": "两列表单",
          "path": "#/form/two",
          "screenshot": "build/views/page4.png",
          "html": "build/views/page4.html"
        },
        {
          "title": "三列表单",
          "path": "#/form/three",
          "screenshot": "build/views/page5.png",
          "html": "build/views/page5.html"
        },
        {
          "title": "四列表单",
          "path": "#/form/four",
          "screenshot": "build/views/page6.png",
          "html": "build/views/page6.html"
        },
        {
          "title": "分步表单",
          "path": "#/form/step",
          "screenshot": "build/views/page7.png",
          "html": "build/views/page7.html"
        },
        {
          "title": "分类表单",
          "path": "#/form/classified",
          "screenshot": "build/views/page8.png",
          "html": "build/views/page8.html"
        },
        {
          "title": "分组表单",
          "path": "#/form/group",
          "screenshot": "build/views/page9.png",
          "html": "build/views/page9.html"
        },
        {
          "title": "流程表单",
          "path": "#/form/flow",
          "screenshot": "build/views/page10.png",
          "html": "build/views/page10.html"
        },
        {
          "title": "分级表单",
          "path": "#/form/hierarchical",
          "screenshot": "build/views/page11.png",
          "html": "build/views/page11.html"
        },
        {
          "title": "基础列表",
          "path": "#/list/basic",
          "screenshot": "build/views/page12.png",
          "html": "build/views/page12.html"
        },
        {
          "title": "卡片列表",
          "path": "#/list/card",
          "screenshot": "build/views/page13.png",
          "html": "build/views/page13.html"
        },
        {
          "title": "表格列表",
          "path": "#/list/table",
          "screenshot": "build/views/page14.png",
          "html": "build/views/page14.html"
        },
        {
          "title": "基础详情",
          "path": "#/detail/basic",
          "screenshot": "build/views/page15.png",
          "html": "build/views/page15.html"
        },
        {
          "title": "高级详情",
          "path": "#/detail/advanced",
          "screenshot": "build/views/page16.png",
          "html": "build/views/page16.html"
        },
        {
          "title": "成功页面",
          "path": "#/feedback/success",
          "screenshot": "build/views/page17.png",
          "html": "build/views/page17.html"
        },
        {
          "title": "失败页面",
          "path": "#/feedback/fail",
          "screenshot": "build/views/page18.png",
          "html": "build/views/page18.html"
        },
        {
          "title": "403",
          "path": "#/feedback/403",
          "screenshot": "build/views/page19.png",
          "html": "build/views/page19.html"
        },
        {
          "title": "404",
          "path": "#/feedback/404",
          "screenshot": "build/views/page20.png",
          "html": "build/views/page20.html"
        },
        {
          "title": "500",
          "path": "#/feedback/500",
          "screenshot": "build/views/page21.png",
          "html": "build/views/page21.html"
        },
        {
          "title": "系统设置",
          "path": "#/settings",
          "screenshot": "build/views/page22.png",
          "html": "build/views/page22.html"
        },
        {
          "title": "个人设置",
          "path": "#/person",
          "screenshot": "build/views/page23.png",
          "html": "build/views/page23.html"
        },
        {
          "title": "登录",
          "path": "#/login",
          "screenshot": "build/views/page24.png",
          "html": "build/views/page24.html"
        },
        {
          "title": "注册",
          "path": "#/register",
          "screenshot": "build/views/page25.png",
          "html": "build/views/page25.html"
        }
      ],
      "description": "使用 TypeScript，包含大量 UI 区块，比如图表、表单等。",
      "homepage": "https://unpkg.com/@alifd/fusion-design-pro@0.1.26/build/index.html",
      "categories": [
        "Basic"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/scaffolds/fusion-design-pro",
      "source": {
        "type": "npm",
        "npm": "@alifd/fusion-design-pro",
        "version": "0.1.26",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@alifd/next": "^1.19.4",
        "moment": "^2.24.0",
        "react": "^16.4.1",
        "react-dom": "^16.4.1",
        "react-intl": "^2.8.0",
        "@antv/data-set": "^0.10.2",
        "bizcharts": "^3.5.6",
        "@alifd/theme-design-pro": "^0.x",
        "prop-types": "^15.5.8",
        "@types/react": "^16.9.13",
        "@types/react-dom": "^16.9.4"
      },
      "screenshots": [
        "https://img.alicdn.com/tfs/TB16ftixUY1gK0jSZFMXXaWcVXa-2880-1800.png"
      ],
      "publishTime": "2019-11-07T09:05:00.572Z",
      "updateTime": "2020-03-12T08:48:00.898Z",
      "__ID__": "e253b087",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/1-zh-e253b087.png",
          "description": "Logo 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 MyName 数据页面 表单页面 列表页面 详情页面 结果&缺省 设置页面 登录&注册 Dashboard/分析页面 分析页面 总销售额 123,456 周同比:10.1↑ 访问量 123,456 周同比:12.0↑ 门店量 82,234 周同比:10.1↑ 门店活动效果 123,456 周同比:10.1↑ 区域销售 亚洲 40% 欧洲 30% 南非 20% 美洲 10% 亚洲 商品类目1 6,123 商品类目2 132,4 周同比 45%↑ 销售额类别占比 类目一 类目二 类目三 销售额 ¥ 183112 消费数据 Alibaba Fusion © 2019-现在 Alibaba Fusion & ICE"
        }
      ]
    },
    {
      "name": "ice-stark-child",
      "title": "icestark 子应用",
      "categories": [
        "icestark"
      ],
      "screenshot": "https://img.alicdn.com/tfs/TB1X5.paYr1gK0jSZFDXXb9yVXa-2480-1200.png",
      "description": "微前端方案 icestark 的子应用模板，用于快速初始化微应用",
      "homepage": "https://unpkg.com/@icedesign/stark-child-scaffold@latest/build/index.html",
      "category": "icestark",
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/scaffolds/ice-stark-child",
      "source": {
        "type": "npm",
        "npm": "@icedesign/stark-child-scaffold",
        "version": "3.0.5",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@alifd/next": "^1.x",
        "@alifd/theme-design-pro": "^0.x",
        "@icedesign/container": "^1.0.4",
        "@types/react": "^16.9.20",
        "@types/react-dom": "^16.9.5",
        "axios": "^0.17.1",
        "moment": "^2.24.0",
        "react": "^16.6.0",
        "react-dom": "^16.6.0"
      },
      "screenshots": [
        "https://img.alicdn.com/tfs/TB1X5.paYr1gK0jSZFDXXb9yVXa-2480-1200.png"
      ],
      "publishTime": "2019-07-22T07:13:43.198Z",
      "updateTime": "2020-03-10T07:26:23.963Z",
      "__ID__": "10bbf813",
      "__SNAPSHOTS__": []
    },
    {
      "builder": "ice-scripts",
      "name": "ice-stark-layout",
      "title": "icestark 框架应用",
      "categories": [
        "icestark"
      ],
      "screenshot": "https://img.alicdn.com/tfs/TB11qbKv.T1gK0jSZFrXXcNCXXa-2878-1640.png",
      "description": "微前端方案 icestark 的框架应用模板，用于快速初始化框架应用",
      "homepage": "https://ice-lab.zeroling.com/",
      "category": "icestark",
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/scaffolds/ice-stark-layout",
      "source": {
        "type": "npm",
        "npm": "@icedesign/stark-layout-scaffold",
        "version": "3.0.10",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@alifd/next": "^1.x",
        "@alifd/theme-design-pro": "^0.x",
        "@icedesign/container": "^1.x",
        "@types/react": "^16.9.20",
        "@types/react-dom": "^16.9.5",
        "classnames": "^2.2.5",
        "moment": "^2.24.0",
        "prop-types": "^15.5.8",
        "react": "^16.8.0",
        "react-dom": "^16.8.0"
      },
      "screenshots": [
        "https://img.alicdn.com/tfs/TB11qbKv.T1gK0jSZFrXXcNCXXa-2878-1640.png"
      ],
      "publishTime": "2019-07-22T04:24:57.724Z",
      "updateTime": "2020-03-10T07:28:11.811Z",
      "__ID__": "c925c49b",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/3-zh-c925c49b.png",
          "description": "Framework Home About Angular 商家平台 小二平台 home page About seller Alibaba Fusion © 2019-现在 Alibaba Fusion & ICE"
        }
      ]
    },
    {
      "name": "Scaffold Lite - JS",
      "title": "Scaffold Lite - JS",
      "category": "Basic",
      "screenshot": "https://img.alicdn.com/tfs/TB12CtTsEY1gK0jSZFMXXaWcVXa-2480-1200.png",
      "description": "轻量级模板，使用 JavaScript，仅包含基础的 Layout。",
      "homepage": "https://unpkg.com/@alifd/scaffold-lite-js@0.1.6/build/index.html",
      "categories": [
        "Basic"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/scaffolds/scaffold-lite-js",
      "source": {
        "type": "npm",
        "npm": "@alifd/scaffold-lite-js",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@alifd/next": "^1.19.4",
        "moment": "^2.24.0",
        "react": "^16.4.1",
        "react-dom": "^16.4.1",
        "@alifd/theme-design-pro": "^0.x"
      },
      "screenshots": [
        "https://img.alicdn.com/tfs/TB12CtTsEY1gK0jSZFMXXaWcVXa-2480-1200.png"
      ],
      "publishTime": "2020-02-15T10:40:59.375Z",
      "updateTime": "2020-03-08T17:13:22.276Z",
      "__ID__": "3d5d372a",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/4-zh-3d5d372a.png",
          "description": "Logo Dashboard Welcome to icejs! This is a awesome project, enjoy it! 使用文档GitHub Alibaba Fusion © 2019-现在 Alibaba Fusion & ICE"
        }
      ]
    },
    {
      "name": "Scaffold Lite - TS",
      "title": "Scaffold Lite - TS",
      "category": "Basic",
      "screenshot": "https://img.alicdn.com/tfs/TB12CtTsEY1gK0jSZFMXXaWcVXa-2480-1200.png",
      "description": "轻量级模板，使用 TypeScript，仅包含基础的 Layout。",
      "homepage": "https://unpkg.com/@alifd/scaffold-lite@0.1.6/build/index.html",
      "categories": [
        "Basic"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/scaffolds/scaffold-lite",
      "source": {
        "type": "npm",
        "npm": "@alifd/scaffold-lite",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@alifd/next": "^1.19.4",
        "moment": "^2.24.0",
        "react": "^16.4.1",
        "react-dom": "^16.4.1",
        "@alifd/theme-design-pro": "^0.x"
      },
      "screenshots": [
        "https://img.alicdn.com/tfs/TB12CtTsEY1gK0jSZFMXXaWcVXa-2480-1200.png"
      ],
      "publishTime": "2019-12-27T08:44:59.425Z",
      "updateTime": "2020-03-08T17:12:55.437Z",
      "__ID__": "8e1284cd",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/5-zh-8e1284cd.png",
          "description": "Logo Dashboard Welcome to icejs! This is a awesome project, enjoy it! 使用文档GitHub Alibaba Fusion © 2019-现在 Alibaba Fusion & ICE"
        }
      ]
    },
    {
      "name": "Scaffold Simple",
      "title": "Scaffold Simple",
      "category": "Basic",
      "screenshot": "https://img.alicdn.com/tfs/TB1qdRsv.Y1gK0jSZFCXXcwqXXa-2878-1590.png",
      "description": "使用 TypeScript，未使用任何 UI 库。",
      "homepage": "https://unpkg.com/@alifd/scaffold-simple@0.1.6/build/index.html",
      "categories": [
        "Basic"
      ],
      "repository": "https://github.com/alibaba-fusion/materials/tree/master/scaffolds/scaffold-simple",
      "source": {
        "type": "npm",
        "npm": "@alifd/scaffold-simple",
        "version": "0.1.6",
        "registry": "https://registry.npmjs.org"
      },
      "dependencies": {
        "@types/react": "^16.9.20",
        "@types/react-dom": "^16.9.5",
        "react": "^16.4.1",
        "react-dom": "^16.4.1"
      },
      "screenshots": [
        "https://img.alicdn.com/tfs/TB1qdRsv.Y1gK0jSZFCXXcwqXXa-2878-1590.png"
      ],
      "publishTime": "2020-02-19T07:56:43.292Z",
      "updateTime": "2020-03-04T14:54:12.698Z",
      "__ID__": "dfa27e69",
      "__SNAPSHOTS__": [
        {
          "url": "https://derek-hu.github.io/store/screenshots/icework/6-zh-dfa27e69.png",
          "description": "Welcome to icejs! This is a awesome project, enjoy it! 使用文档GitHub"
        }
      ]
    }
  ]
}